<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ksdshpx.mybatis.mapper.EmployeeMapper">
    <!--
        namespace:名称空间,指定为接口的全类名
        id:唯一标识
        resultType:返回值类型
        #{id}:从传递过来的参数中取出id值
    -->
    <select id="selectEmp" resultType="cn.ksdshpx.mybatis.beans.Employee">
        <!--select id,last_name as lastName,gender,email from tbl_employee where id = #{id}-->
        select * from tbl_employee where id = #{id}
    </select>

    <!--public Employee getEmpById(Integer id);-->
    <!--
    <select id="getEmpById" resultType="cn.ksdshpx.mybatis.beans.Employee">
        select id,last_name as lastName,gender,email from tbl_employee where id = #{id}
    </select>
    -->
    <select id="getEmpById" resultType="employee" databaseId="mysql">
        select id,last_name as lastName,gender,email from tbl_employee where id = #{id}
    </select>

    <!--void addEmp(Employee employee);-->
    <!--parameterType可以省略不写-->
    <insert id="addEmp" parameterType="cn.ksdshpx.mybatis.beans.Employee">
        INSERT INTO tbl_employee (last_name, gender, email) VALUES (#{lastName}, #{gender}, #{email})
    </insert>
    <!--void updateEmp(Employee employee);-->
    <update id="updateEmp">
        UPDATE tbl_employee SET last_name = #{lastName},gender = #{gender},email = #{email} WHERE id = #{id}
    </update>
    <!--void deleteEmpById(Integer id);-->
    <delete id="deleteEmpById">
        DELETE FROM tbl_employee WHERE id = #{id}
    </delete>
</mapper>